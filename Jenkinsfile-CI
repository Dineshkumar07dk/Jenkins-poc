pipeline {
    agent any
    tools {
	    maven "Maven"
	    jdk "Java"
	}
	environment{
	    DOCKERHUB_CREDENTIALS=credentials('dockerhub')
	    appRegistry = "dineshdk07/myapp"
	    database = "dineshdk07/database"
	    
	}
	
    stages{
        stage('Fetch code') {
          steps{
              git branch: 'docker', url:'https://github.com/vengalasanjay/my-poc-final.git'
          }  
        }

        stage('Build') {
            steps {
                sh 'mvn clean install -DskipTests'
            }
            post {
                success {
                    echo "Now Archiving."
                    archiveArtifacts artifacts: '**/*.war'
                }
            }
        }
        stage('Test'){
            steps {
                sh 'mvn test'
            }

        }

        stage('Checkstyle Analysis'){
            steps {
                sh 'mvn checkstyle:checkstyle'
            }
        }

        // stage('Sonar Analysis') {
        //     environment {
        //         scannerHome = tool 'sonar4.7'
        //     }
        //     steps {
        //       withSonarQubeEnv('sonar') {
        //           sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \
        //           -Dsonar.projectName=vprofile \
        //           -Dsonar.projectVersion=1.0 \
        //           -Dsonar.sources=src/ \
        //           -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \
        //           -Dsonar.junit.reportsPath=target/surefire-reports/ \
        //           -Dsonar.jacoco.reportsPath=target/jacoco.exec \
        //           -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''
        //       }
        //     }
        // }


    stage('Build App Image') {
       steps {
       
         script {
                dockerImage = docker.build( appRegistry + ":$BUILD_NUMBER", "Docker-files/app/multistage/")
                 dockerImage = docker.build( database + ":$BUILD_NUMBER", "Docker-files/db/")
             }

         }
    
    }
        stage('login') {
          steps{
              sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u dineshdk07 --password-stdin'
          }
        }
        stage('push') {
          steps{
           sh ' docker push dineshdk07/myapp:$BUILD_NUMBER'
           sh ' docker push dineshdk07/database:$BUILD_NUMBER'
           
          }
       }



    }
}
